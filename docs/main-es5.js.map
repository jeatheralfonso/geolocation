{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/location.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","locationService","title","location","getLocation","startTracking","pos","latitude","lat","longitude","lng","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","LocationService","HIGH_ACCURACY","MAX_CACHE_AGE_MILLISECOND","MAX_NEW_POSITION_MILLISECOND","trackOptions","enableHighAccuracy","maximumAge","timeout","reject","navigator","geolocation","getCurrentPosition","resp","coords","err","watchPosition","providedIn","environment","production","bootstrapModule","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport { LocationService } from './location.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'geolocation';\n  public latitude;\n  public longitude;\n  constructor(public locationService: LocationService) {\n\n  }\n  ngOnInit() {\n    let location = this.getLocation();\n  }\n  getLocation() {\n    this.locationService.startTracking().then(pos => {\n      this.latitude = pos.lat;\n      this.longitude = pos.lng;\n    });\n  }\n}\n","<div style=\"text-align: center;\">\n  <h1>{{latitude}},{{longitude}}</h1>\n</div>","import { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { LocationService } from './location.service';\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [LocationService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { rejects } from 'assert';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocationService {\n\n  //for tracking\n  HIGH_ACCURACY: boolean = true;\n  MAX_CACHE_AGE_MILLISECOND: number = 30000;\n  MAX_NEW_POSITION_MILLISECOND: number = 5000;\n\n  trackOptions = {\n    enableHighAccuracy: this.HIGH_ACCURACY,\n    maximumAge: this.MAX_CACHE_AGE_MILLISECOND,\n    timeout: this.MAX_NEW_POSITION_MILLISECOND,\n  };\n\n  constructor() { }\n\n  getPosition(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(resp => {\n        resolve({ lng: resp.coords.longitude, lat: resp.coords.latitude });\n      },\n        err => {\n          reject(err);\n        });\n    });\n  }\n\n  startTracking(): Promise<any>{\n    return new Promise((resolve, reject) => {\n      navigator.geolocation.watchPosition((resp) => {\n        resolve({ lng: resp.coords.longitude, lat: resp.coords.latitude });\n        \n      }, (err) => {\n        reject(err);\n      }, this.trackOptions)\n    });\n  \n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}